{"version":3,"file":"static/js/663.f6f1f121.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","services/getMoviesList_Api.js","services/getMovie_API.js","services/getMovieCast_API.js","services/getMovieReviews_API.js","services/getMoviesQuery_API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperCast = styled.div`\n    padding-top: 20px;\n`;\n\nexport const CastItem = styled.li`\n    padding-bottom: 15px;\n    margin-left: 30px;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from '../../services';\nimport { Loader } from \"components/Loader\";\nimport { CastItem, WrapperCast } from \"./Cast.styled\";\n\nexport default function Cast () {\n    const { id } = useParams();\n\n    const [movieCast, setMovieCast] = useState([]);\n    const [load, setLoad] = useState(false);\n\n    // Запрос на бекэнд\n    useEffect(() => {\n        setLoad(true);\n        getMovieCast(id)\n            .then(response => setMovieCast(response))\n            .finally(() => setLoad(false));\n    }, [id]);\n\n    return (\n        <WrapperCast>\n            {load && <Loader />}\n            {/* Если нет списка актеров, то выводится сообщение: \"No information about actors\" */}\n            {movieCast.length === 0\n                ? <h2>No information about actors</h2>\n                :\n                <ul>\n                    {movieCast.map(({ name, profile_path, character }) =>\n                        <CastItem key={name}>\n                            <p>{name}</p>\n                            <img\n                            src={\n                                profile_path\n                                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n                                }\n                            alt={name}\n                            width=\"100px\"\n                            />\n                            <p>Character: {character}</p>\n                        </CastItem>\n                    )}\n                </ul>\n            }\n\n        </WrapperCast>\n    )\n};","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 50px;\n`;","import { Circles } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <LoaderWrapper>\n            <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#4fa94d\"\n            ariaLabel=\"circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        />\n        </LoaderWrapper>\n\n        \n    )\n};","import axios from 'axios';\n\n// Функция запроса на сервер списка фильмов для Home\nexport async function getMoviesList() {\n    try {\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}trending/all/day?${searchParams}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n\n// Функция запроса на сервер\n// export async function getPhotos(wordForSearch, startPage) {\n//     try {\n//         // Удаление времени из запроса\n//         const SearchPhrase = wordForSearch.slice(14, wordForSearch.length);\n//         // Параметры поиска\n//         const BASE_URL = 'https://pixabay.com/api/';\n//         const searchParams = new URLSearchParams({\n//             key: '2842151-bd094d52b36040a4b6da8b1da',\n//             format: 'json',\n//             q: SearchPhrase, // Поисковая фраза => Введённое слово\n//             image_type: 'photo',\n//             orientation: 'horizontal',\n//             safesearch: 'true',\n//             page: startPage,\n//             per_page: 12,\n//         });\n//         // Запрос на сервер\n//         const response = await axios.get(`${BASE_URL}?${searchParams}`);\n//         return response;\n//     } catch (error) {\n//         console.error(error);\n//     }\n// }","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovie(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}?${searchParams}`);\n        return response.data;\n        \n    } catch (error) {\n        // Если сервер ответил ошибкой (отсутствие данных), то возвращаем в ответе false\n        console.error(error.response.data.success);\n        return error.response.data.success;\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovieCast(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}/credits?${searchParams}`);\n        return response.data.cast;\n        \n    } catch (error) {\n        console.error(error);\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovieReviews(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}/reviews?${searchParams}`);\n        return response.data.results;\n        \n    } catch (error) {\n        console.error(error);\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер списка фильмов для Home\nexport async function getMoviesQuery(keyword) {\n    try {\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n            query: keyword,\n        });\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error);\n    }\n};"],"names":["WrapperCast","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","Cast","id","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","load","setLoad","useEffect","getMovieCast","then","response","finally","_jsxs","children","_jsx","Loader","length","map","_ref","name","profile_path","character","src","concat","alt","width","LoaderWrapper","Circles","height","color","ariaLabel","wrapperStyle","wrapperClass","visible","getMoviesList","_getMoviesList","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","searchParams","_context","prev","next","URLSearchParams","api_key","axios","sent","abrupt","data","results","t0","console","error","stop","getMovie","_x","_getMovie","success","_getMovieCast","cast","getMovieReviews","_getMovieReviews","getMoviesQuery","_getMoviesQuery","keyword","query"],"sourceRoot":""}