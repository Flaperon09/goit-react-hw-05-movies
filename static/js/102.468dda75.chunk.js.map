{"version":3,"file":"static/js/102.468dda75.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js","services/getMoviesList_Api.js","services/getMovie_API.js","services/getMovieCast_API.js","services/getMovieReviews_API.js","services/getMoviesQuery_API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 50px;\n`;","import { Circles } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <LoaderWrapper>\n            <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#4fa94d\"\n            ariaLabel=\"circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        />\n        </LoaderWrapper>\n\n        \n    )\n};","import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n    margin-top: 20px;\n    margin-left: 40px;\n`;\n\nexport const MoviesListItem = styled.li`\n    padding-bottom: 5px;\n`;","import { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport { getMoviesQuery } from '../../services';\nimport { useState, useEffect } from 'react';\nimport { Loader } from \"components/Loader\";\nimport { MoviesList, MoviesListItem } from './Movies.styled';\n\nexport default function Movies () {\n\n    const location = useLocation();\n\n    const [searchParams, setSearchParams] = useSearchParams(); // Изменение строки запроса\n    let query = searchParams.get(\"query\") ?? \"\"; // Изменяемый параметр запроса\n    \n    const [inputSearch, setInputSearch] = useState(''); // Поисковый запрос\n    const [moviesQuery, setMoviesQuery] = useState([]); // Хранение ответа бекэнда\n    const [load, setLoad] = useState(false);\n\n    // === Запрос на бекэнд\n    useEffect(() => {\n        if (inputSearch.length === 0) return;\n        setLoad(true);\n        getMoviesQuery(inputSearch)\n            .then(response => setMoviesQuery(response))\n            .finally(() => setLoad(false));\n    }, [inputSearch]);\n    \n    // === Функция получения запроса\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // Получение запроса из поля input\n        setInputSearch(`${event.target[0].value.toLowerCase()}`);\n    };\n\n    // === Функция удаления \"?query=\" в строке запроса при очистке input\n    const updateQueryString = evt => {\n        evt.target.value === '' ? setSearchParams({}) : setSearchParams({ query: evt.target.value })\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={query} onChange={updateQueryString}></input>\n                <button type=\"submit\">Search</button>\n            </form>\n            <div>\n                {load && <Loader />}\n                <MoviesList>\n                    {moviesQuery.map(({ id, title, name }) => (\n                        <Link key={id} to={`${id}`} state={{ from: location }}>\n                            {/* Если нет параметра title, то подставляется параметр name */}\n                            <MoviesListItem>{title ? title : name}</MoviesListItem>\n                        </Link>\n                    ))}\n                </MoviesList>\n            </div>\n        </div>\n    )\n};","import axios from 'axios';\n\n// Функция запроса на сервер списка фильмов для Home\nexport async function getMoviesList() {\n    try {\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}trending/all/day?${searchParams}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n\n// Функция запроса на сервер\n// export async function getPhotos(wordForSearch, startPage) {\n//     try {\n//         // Удаление времени из запроса\n//         const SearchPhrase = wordForSearch.slice(14, wordForSearch.length);\n//         // Параметры поиска\n//         const BASE_URL = 'https://pixabay.com/api/';\n//         const searchParams = new URLSearchParams({\n//             key: '2842151-bd094d52b36040a4b6da8b1da',\n//             format: 'json',\n//             q: SearchPhrase, // Поисковая фраза => Введённое слово\n//             image_type: 'photo',\n//             orientation: 'horizontal',\n//             safesearch: 'true',\n//             page: startPage,\n//             per_page: 12,\n//         });\n//         // Запрос на сервер\n//         const response = await axios.get(`${BASE_URL}?${searchParams}`);\n//         return response;\n//     } catch (error) {\n//         console.error(error);\n//     }\n// }","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovie(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}?${searchParams}`);\n        return response.data;\n        \n    } catch (error) {\n        // Если сервер ответил ошибкой (отсутствие данных), то возвращаем в ответе false\n        console.error(error.response.data.success);\n        return error.response.data.success;\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovieCast(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}/credits?${searchParams}`);\n        return response.data.cast;\n        \n    } catch (error) {\n        console.error(error);\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovieReviews(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}/reviews?${searchParams}`);\n        return response.data.results;\n        \n    } catch (error) {\n        console.error(error);\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер списка фильмов для Home\nexport async function getMoviesQuery(keyword) {\n    try {\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n            query: keyword,\n        });\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error);\n    }\n};"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","Circles","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MoviesList","MoviesListItem","_templateObject2","Movies","_searchParams$get","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_useState","useState","_useState2","inputSearch","setInputSearch","_useState3","_useState4","moviesQuery","setMoviesQuery","_useState5","_useState6","load","setLoad","useEffect","length","getMoviesQuery","then","response","finally","_jsxs","onSubmit","event","preventDefault","concat","target","value","toLowerCase","type","onChange","evt","map","_ref","id","title","name","Link","to","state","from","getMoviesList","_getMoviesList","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","URLSearchParams","api_key","axios","sent","abrupt","data","results","t0","console","error","stop","getMovie","_x","_getMovie","success","getMovieCast","_getMovieCast","cast","getMovieReviews","_getMovieReviews","_getMoviesQuery","keyword"],"sourceRoot":""}