{"version":3,"file":"static/js/344.9a35ff02.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/getMoviesList_Api.js","services/getMovie_API.js","services/getMovieCast_API.js","services/getMovieReviews_API.js","services/getMoviesQuery_API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 50px;\n`;","import { Circles } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <LoaderWrapper>\n            <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#4fa94d\"\n            ariaLabel=\"circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        />\n        </LoaderWrapper>\n\n        \n    )\n};","import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n    padding-left: 40px;\n`;\n\nexport const MoviesListItem = styled.li`\n    padding-bottom: 5px;\n`;\n\nexport const MoviesListHeader = styled.h2`\n    padding-bottom: 20px;\n`;","import { getMoviesList } from '../../services';\nimport { useState, useEffect } from 'react';\nimport { MoviesListHeader, MoviesList, MoviesListItem } from './Home.styled';\nimport { Loader } from \"components/Loader\";\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function Home () {\n\n    const location = useLocation();\n\n    const [moviesList, setMoviesList] = useState([]);\n    const [load, setLoad] = useState(false);\n    \n    // Запрос на бекэнд\n    useEffect(() => {\n        setLoad(true);\n        getMoviesList()\n            .then(response => setMoviesList(response))\n            .finally(() => setLoad(false));\n    }, []);\n\n    return (\n        <div>\n            {load && <Loader />}\n            <MoviesListHeader>Trending today</MoviesListHeader>\n            <MoviesList>\n                {moviesList.map(({ id, title, name }) => (\n                    <Link key={id} to={`movies/${id}`} state={{ from: location }}>\n                        {/* Если нет параметра title, то подставляется параметр name */}\n                        <MoviesListItem>{title ? title : name}</MoviesListItem>\n                    </Link>\n                ))}\n            </MoviesList>\n        </div>\n    )\n    \n};","import axios from 'axios';\n\n// Функция запроса на сервер списка фильмов для Home\nexport async function getMoviesList() {\n    try {\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}trending/all/day?${searchParams}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n\n// Функция запроса на сервер\n// export async function getPhotos(wordForSearch, startPage) {\n//     try {\n//         // Удаление времени из запроса\n//         const SearchPhrase = wordForSearch.slice(14, wordForSearch.length);\n//         // Параметры поиска\n//         const BASE_URL = 'https://pixabay.com/api/';\n//         const searchParams = new URLSearchParams({\n//             key: '2842151-bd094d52b36040a4b6da8b1da',\n//             format: 'json',\n//             q: SearchPhrase, // Поисковая фраза => Введённое слово\n//             image_type: 'photo',\n//             orientation: 'horizontal',\n//             safesearch: 'true',\n//             page: startPage,\n//             per_page: 12,\n//         });\n//         // Запрос на сервер\n//         const response = await axios.get(`${BASE_URL}?${searchParams}`);\n//         return response;\n//     } catch (error) {\n//         console.error(error);\n//     }\n// }","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovie(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}?${searchParams}`);\n        return response.data;\n        \n    } catch (error) {\n        // Если сервер ответил ошибкой (отсутствие данных), то возвращаем в ответе false\n        console.error(error.response.data.success);\n        return error.response.data.success;\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovieCast(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}/credits?${searchParams}`);\n        return response.data.cast;\n        \n    } catch (error) {\n        console.error(error);\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер данных по фильму\nexport async function getMovieReviews(id) {\n    try {\n\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n        });\n\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}movie/${id}/reviews?${searchParams}`);\n        return response.data.results;\n        \n    } catch (error) {\n        console.error(error);\n    }\n};","import axios from 'axios';\n\n// Функция запроса на сервер списка фильмов для Home\nexport async function getMoviesQuery(keyword) {\n    try {\n        // Параметры поиска\n        const BASE_URL = 'https://api.themoviedb.org/3/';\n        const searchParams = new URLSearchParams({\n            api_key: '70e00eb52bcb7ab46f183ec1381bf837',\n            query: keyword,\n        });\n        // Запрос на сервер\n        const response = await axios.get(`${BASE_URL}search/movie?${searchParams}`);\n        return response.data.results;\n    } catch (error) {\n        console.error(error);\n    }\n};"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","Circles","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MoviesList","MoviesListItem","_templateObject2","MoviesListHeader","_templateObject3","Home","location","useLocation","_useState","useState","_useState2","_slicedToArray","moviesList","setMoviesList","_useState3","_useState4","load","setLoad","useEffect","getMoviesList","then","response","finally","_jsxs","map","_ref","id","title","name","Link","to","concat","state","from","_getMoviesList","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","searchParams","_context","prev","next","URLSearchParams","api_key","axios","sent","abrupt","data","results","t0","console","error","stop","getMovie","_x","_getMovie","success","getMovieCast","_getMovieCast","cast","getMovieReviews","_getMovieReviews","getMoviesQuery","_getMoviesQuery","keyword","query"],"sourceRoot":""}